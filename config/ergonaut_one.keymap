#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <24 25>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <24 26>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 24>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <24 28>;
        };

        find {
            bindings = <&kt LC(F)>;
            key-positions = <24 29>;
        };

        newtab {
            bindings = <&kt LC(T)>;
            key-positions = <5 24>;
        };

        bold {
            bindings = <&kp LC(B)>;
            key-positions = <29 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mo 2                      &kp SQT        &kp COMMA  &kp PERIOD  &kp P        &kp Y      &kp F      &kp G           &kp C      &kp R  &kp L  &mt SLASH SLASH
&mt RIGHT_CONTROL GRAVE    &kp A          &kp O      &kp E       &kp U        &kp I      &kp D      &kp H           &kp T      &kp N  &kp S  &mt LEFT_WIN MINUS
&mt LEFT_ALT LEFT_BRACKET  &kp SEMICOLON  &kp Q      &kp J       &kp K        &kp X      &kp B      &kp M           &kp W      &kp V  &kp Z  &mt RIGHT_ALT RIGHT_BRACKET
                                                     &lt 2 TAB   &lt 3 SPACE  &lt 1 RET  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp RALT
                                  &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&mo 0                     &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp UP_ARROW     &kp PG_UP  &kp SLCK         &kp CLCK
&mt LCTRL EQUAL           &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp C_MUTE    &kp LEFT  &kp DOWN_ARROW   &kp RIGHT  &kp INS          &mt RCTRL K_APP
&mt LEFT_SHIFT BACKSPACE  &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp C_VOL_DN  &kp END   &kp PRINTSCREEN  &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                                      &trans     &trans     &trans        &trans        &trans    &trans
            >;
        };

        leftnav {
            bindings = <
&trans            &kp LEFT_CONTROL  &kp C_PLAY_PAUSE  &kp UP_ARROW    &kp C_NEXT       &kp C_PREVIOUS  &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans            &kp U             &kp I           &kp B            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans          &trans           &trans          &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
